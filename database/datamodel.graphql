type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  name: String!
  friends: [User!]! @relation(name: "Friends")
  friendRequests: [User!]! @relation(name: "FriendRequests")
  groups: [Group!]! @relation(name: "UserParticipants", onDelete: CASCADE)
  avatar: String
}

type Split {
  id: ID! @unique
  amount: Int!
  author: User!
  ownedBy: Expense! @relation(name: "Splits")
}

type Expense {
  id: ID! @unique
  title: String!
  participants: [User!]!
    @relation(name: "ExpenseParticipants", onDelete: CASCADE)
  splits: [Split!]! @relation(name: "Splits", onDelete: CASCADE)
  amount: Int
  author: User! @relation(name: "ExpenseAuthor")
  ownedBy: Group! @relation(name: "Expenses")
}

type Group {
  id: ID! @unique
  createdAt: DateTime!
  title: String!
  participants: [User!]! @relation(name: "UserParticipants", onDelete: CASCADE)
  expenses: [Expense!]! @relation(name: "Expenses", onDelete: CASCADE)
  author: User! @relation(name: "UserAuthor")
}
